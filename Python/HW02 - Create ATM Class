{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPuaO7pi5gZdtuJfbBo41py",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/VincentLin95/data-science-bootcamp-8/blob/main/Untitled4.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# class ATM\n",
        "import random as rand\n",
        "class ATM:\n",
        "    def __init__(self, name, number, bank, branch, balance):\n",
        "        self.name = name\n",
        "        self.number = number\n",
        "        self.bank = bank\n",
        "        self.branch = branch\n",
        "        self.balance = balance\n",
        "# 1st method - deposit\n",
        "    def deposit(self, amount):\n",
        "        self.amount = amount\n",
        "        print(\"Good day, do you want to confirm your deposit request?\")\n",
        "        print(\"Type 'Y' for deposit some money, type 'N' for back to main menu\")\n",
        "        dep_req = input()\n",
        "        if dep_req == 'Y':\n",
        "            self.balance += amount\n",
        "            print(f\"Your deposit balance is: {self.amount} Baht\")\n",
        "            print(f\"Your total balance is: {self.balance} Baht\")\n",
        "            print(\"Thank you. Have a nice day.\")\n",
        "        elif dep_req == 'N':\n",
        "            print(\"Thank you. The system will bring you back to main menu.\")\n",
        "        else:\n",
        "            print(\"404 NOT FOUND ERROR, plaese refresh the banking system again.\")\n",
        "\n",
        "# 2nd method - withdraw\n",
        "    def withdraw(self, amount):\n",
        "        self.amount = amount\n",
        "        if self.amount > self.balance:\n",
        "            print(\"Sorry, your withdraw request was cancelled automatically because your balance wasn't enough to withdraw.\")\n",
        "        else:\n",
        "            print(\"Good day, do you want to confirm your withdraw request?\")\n",
        "            print(\"Type 'Y' for withdraw some money, type 'N' for back to main menu\")\n",
        "            wit_req = input()\n",
        "            if wit_req == 'Y':\n",
        "                self.balance -= amount\n",
        "                print(f\"Your withdraw balance is: {self.amount} Baht\")\n",
        "                print(f\"Your total balance is: {self.balance} Baht\")\n",
        "                print(\"Thank you. Have a nice day.\")\n",
        "            elif wit_req == 'N':\n",
        "                print(\"Thank you. The system will bring you back to main menu.\")\n",
        "            else:\n",
        "                print(\"404 NOT FOUND ERROR, plaese refresh the banking system again.\")\n",
        "\n",
        "# 3rd method - transfer to other account\n",
        "    def transfer(self, amount):\n",
        "        self.amount = amount\n",
        "        if self.amount > self.balance:\n",
        "            print(\"Sorry, your transfer request was cancelled automatically because your balance wasn't enough to transfer.\")\n",
        "        else:\n",
        "            print(\"Good day, do you want to confirm your transfer request?\")\n",
        "            print(\"Type 'Y' for transfer some money, type 'N' for back to main menu\")\n",
        "            tran_req = input()\n",
        "            if tran_req == 'Y':\n",
        "                self.balance -= amount\n",
        "                des_acc = input(\"Please enter account/PromptPay number: \")\n",
        "                print(\"Pease be careful the scammers or any finanicail frauding.\")\n",
        "                print(\"Do you want to confirm your request?. Type 'Y' to confirm, type 'N' to cancel.\")\n",
        "                des_confirm = input()\n",
        "                if des_confirm == 'Y':\n",
        "                    print(\"Transaction successful!.\")\n",
        "                    print(f\"Transfer {self.amount} Baht to {des_acc}.\")\n",
        "                    print(f\"Your total balance is: {self.balance} Baht\")\n",
        "                    print(\"Thank you. Have a nice day.\")\n",
        "                else:\n",
        "                    print(\"Transaction cancelled.\")\n",
        "            elif tran_req == 'N':\n",
        "                print(\"Thank you. The system will bring you back to main menu.\")\n",
        "            else:\n",
        "                print(\"404 NOT FOUND ERROR, plaese refresh the banking system again.\")\n",
        "\n",
        "# 4th method - check balance\n",
        "    def check(self):\n",
        "        print(f\"Account name: {self.name}\")\n",
        "        print(f\"Account number: {self.number}, {self.bank} ({self.branch})\")\n",
        "        print(f\"Account balance: {self.balance}\")\n",
        "\n",
        "# 5th method - OTP request\n",
        "    def OTP(self):\n",
        "        print(\"Do you want to request OTP? Type 'Y' for next step, type 'N' for cancel.\")\n",
        "        otp_req = input()\n",
        "        if otp_req == 'Y':\n",
        "            otp = list(range(0000, 9999))\n",
        "            otp_password = rand.choice(otp)\n",
        "            print(f\"Your OTP password is: {otp_password}\")\n",
        "        elif otp_req == 'N':\n",
        "            print(\"Thank you. The system will bring you back to main menu.\")\n",
        "        else:\n",
        "            print(\"404 NOT FOUND ERROR, plaese refresh the banking system again.\")"
      ],
      "metadata": {
        "id": "P5YAP5Uq0mql"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "myacc = ATM(\"Vincent\", 1212312121, \"Kasikorn\", \"Emquatier\", 100000)\n",
        "myacc.name"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "WlRUgg6U5QYN",
        "outputId": "6b62e994-d674-4b70-fa38-cf859ca88585"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Vincent'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.bank"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "-orIyLZO5eCt",
        "outputId": "784756b5-127f-45ae-9a8b-bd98ea44b371"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Kasikorn'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.number"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gOl_1f4iGJFJ",
        "outputId": "b3e9f563-b260-4dac-d852-b20884dcebe4"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1212312121"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.branch"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "mEZsFCRS5hhI",
        "outputId": "dc382b87-3992-43ad-a4d3-a2afe569d617"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Emquatier'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.balance"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ym_B0MTK5j44",
        "outputId": "d0aadfde-6c92-4dce-b62e-7d66d3533253"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100000"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.deposit(100000)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M6l3eph96la9",
        "outputId": "daa07400-6de6-4b4e-af0a-6df3c45ba45f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Good day, do you want to confirm your deposit request?\n",
            "Type 'Y' for deposit some money, type 'N' for back to main menu\n",
            "Y\n",
            "Your deposit balance is: 100000\n",
            "Your total balance is: 200000\n",
            "Thank you. Have a nice day.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.withdraw(1000)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cp7oUla671w4",
        "outputId": "ccbb4840-17a4-4496-eeba-fb7af198fd9c"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Good day, do you want to confirm your withdraw request?\n",
            "Type 'Y' for withdraw some money, type 'N' for back to main menu\n",
            "Y\n",
            "Your withdraw balance is: 1000\n",
            "Your total balance is: 99000\n",
            "Thank you. Have a nice day.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.transfer(500)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c2R-mMnw93V5",
        "outputId": "e1063710-86fd-4f47-eea9-262ce6c5bb8c"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Good day, do you want to confirm your transfer request?\n",
            "Type 'Y' for transfer some money, type 'N' for back to main menu\n",
            "Y\n",
            "Please enter account/PromptPay number: 5000000\n",
            "Pease be careful the scammers or any finanicail frauding.\n",
            "Do you want to confirm your request?. Type 'Y' to confirm, type 'N' to cancel.\n",
            "Y\n",
            "Transaction successful!.\n",
            "Transfer 500 Baht to 5000000.\n",
            "Your total balance is: 99500 Baht\n",
            "Thank you. Have a nice day.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.check()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GTjgzhZrCVxd",
        "outputId": "50822820-6fec-4d3c-b17f-066ed8b6c64f"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Account name: Vincent\n",
            "Account number: 1212312121, Kasikorn (Emquatier)\n",
            "Account balance: 100000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "myacc.OTP()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AJ-i8Y7tF3S2",
        "outputId": "965d9752-f118-4329-b500-4c02811d074f"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Do you want to request OTP? Type 'Y' for next step, type 'N' for cancel.\n",
            "Y\n",
            "Your OTP pssword is: 3362\n"
          ]
        }
      ]
    }
  ]
}
